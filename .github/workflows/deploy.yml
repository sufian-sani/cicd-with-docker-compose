name: CI/CD for Flask App (With Docker Compose)

on:
  push:
    branches:
      - main  # Run when code is pushed to main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 4: Build and push Flask app image
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-attendance-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-attendance-app

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Deploy to AWS EC2
      - name: Deploy to AWS EC2
        run: |
          echo "${{ secrets.AWS_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'

            echo "ðŸ”§ Pulling latest Docker image..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Navigate to app directory
            cd /home/${{ secrets.AWS_USER }}/app || mkdir -p /home/${{ secrets.AWS_USER }}/app && cd /home/${{ secrets.AWS_USER }}/app

            # Remove old files
            rm -rf *

            # Get latest code from GitHub
            git clone https://github.com/${{ github.repository }} .
            git fetch origin main
            git reset --hard origin/main

            echo "ðŸš€ Starting deployment with Docker Compose..."
            
            # Stop and remove old containers
            docker compose down || true

            # Rebuild and start containers
            docker compose up -d --build

            echo "âœ… Deployment complete!"
          EOF

